// index.js
// Importa tanto 'app' como 'connectDB' desde app.js (donde app.js las re-exporta)
const { app, connectDB } = require("./app"); // âœ… correcto
const config = require("./config"); // Puedes seguir usando config para otras cosas si es necesario

// Define el puerto. Usar process.env.PORT es la mejor prÃ¡ctica, especialmente para despliegues como Azure.
const PORT = process.env.PORT || 3000; // Usa process.env.PORT para Azure o 3000 por defecto

// Llama a connectDB() y maneja su Promesa ANTES de iniciar el servidor
connectDB()
    .then(() => {
        // Si la conexiÃ³n a la base de datos fue exitosa, entonces inicia el servidor Express
        console.log("âœ… ConexiÃ³n a la base de datos exitosa.");
        app.listen(PORT, () => {
            console.log(`Servidor Express ejecutÃ¡ndose en http://localhost:${PORT}`);
        });
    })
    .catch(err => {
        // Si la conexiÃ³n a la base de datos fallÃ³, muestra el error y termina la aplicaciÃ³n
        console.error("ğŸš« La aplicaciÃ³n no pudo iniciarse debido a un error de conexiÃ³n a la base de datos.");
        console.error(err); // Imprime el error detallado aquÃ­ para una mejor depuraciÃ³n
        process.exit(1); // Sale de la aplicaciÃ³n con un cÃ³digo de error (importante paraÂ Azure)
Â Â Â Â });